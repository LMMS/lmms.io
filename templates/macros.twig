{# Prints an FontAwesome icon #}
{% macro icon(icon) %}
	<span class='fa {{ icon }}'></span>
{% endmacro %}

{% macro jumbo(title, subtitle) %}
<div class="jumbotron mini">
	<div class="container">
		<h1>{{ title }}</h1>
		<p>{{ subtitle }}</p>
	</div>
</div>
{% endmacro %}

{# Prints an FontAwesome icon stack with two icons and a tooltip #}
{% macro icon_stack(icon1, icon2, parentclass, tooltip) %}
	{% import _self as macros %}
	<span class='fa-stack {{ parentclass }}' data-toggle='tooltip' data-placement='bottom' title='{{ tooltip }}'>
		{{ macros.icon(icon1) }}
		{{ macros.icon(icon2) }}
	</span>
{% endmacro %}

{# Prints an icon stack with the lower one being a double sized circle
   and the upper one being inversed #}
{% macro circle_stack(icon, class = '', tooltip = '') %}
	{% import _self as macros %}
	{{ macros.icon_stack('fa-circle fa-stack-2x', "#{icon} fa-stack-1x fa-inverse", class , tooltip ) }}
{% endmacro %}

{% macro make_reflection(image_path, thumbnail_path = null, blackorwhite = 'black', class = '') %}
	{# If no thumbnail is supplied, try 'th_' . $image_path #}
	{#
	{% if not thumbnail_path %}
		{% set pieces = image_path|split('/') %}
		{% set newpieces = [] %}

		{% for piece in pieces %}
			{% if piece == pieces|last %}
				{% set newpieces = newpieces|merge(['th_' ~ piece]) %}
			{% else %}
				{% set newpieces = newpieces|merge([piece]) %}
			{% endif %}
		{% endfor %}
		{% set thumbnail_path = newpieces|join('/') %}
	{% endif %}
	#}

	<div id="reflect-{{ blackorwhite }}" class="image-block {{ class }}">
		<a href="{{ image_path }}" data-lightbox="image" data-title="&lt;a target=&quot;_blank&quot; href=&quot;{{ image_path}}&quot; title=&quot;Download full size image&quot; download&gt;&lt;i class=&quot;fa fa-arrow-circle-down &quot;/&gt;&lt;/a&gt;" ><img src="{{ thumbnail_path }}" alt="" /></a>
	<div class="reflection visible-lg">
		<img src="{{ thumbnail_path }}" alt="" />
		<div class="overlay"></div>
	</div>
	</div>
{% endmacro %}
