{% extends 'base.twig' %}

{% import 'macros.twig' as macros %}
{% import 'download/index.twig' as download %}

{% macro ospage(os, title, subtitle, id, artifacts, instruction, trailer) %}
<div id="{{ os }}-div" class="text-center hidden container">
	<h2>{{ title }}</h2>
	{% if artifacts %}
		<p>{{ subtitle }}</p>
		<div class="alert alert-danger">
			{% trans with {'%download%': path('download')} %}Anyone can open a pull request against LMMS; we are not responsible for the builds on this page.<br>Unless you were directed here to test a pull request, please download an official build from the <a href="%download%">main download page</a> instead.{% endtrans %}
		</div>
		<h3>{% trans %}Pull Request {% endtrans %} <a href="https://github.com/lmms/lmms/pull/{{ id }}">#{{ id }}</a></h3>
		{% for asset in artifacts %}
			{{ download.printrelbutton(asset, 'btn-dl-pr') }}
		{% endfor %}
		{{ download.releasenotes(artifacts[0].description, "#{os}-artifacts") }}
		{% if instruction %}<div class="alert alert-warning">{{ instruction|raw }}</div>{% endif %}
		<div id="prerelease" class="text-center">
			<small>
				<span class="fas fa-exclamation-circle"></span>
				{% trans %}Pull request builds are experimental software; expect stability issues.{% endtrans %}
			</small>
		</div>
	{% else %}
		<p>{% trans %}There are currently no builds available for this pull request. Building may have failed, or may not have completed yet.<br>If this is an old pull request, the builds may have expired.{% endtrans %}</p>
	{% endif %}
	{{ trailer|raw }}
</div>
{% endmacro %}

{% block content %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
{{ macros.jumbo('Download LMMS'|trans,
'Downloading and using LMMS is free! Just choose the operating system you want to run LMMS on:'|trans) }}
<div class="text-center container">
	<div>
		<div class="btn-group" data-toggle="buttons">
			{{ download.osbutton('linux', 'fa-linux', 'Linux') }}
			{{ download.osbutton('windows', 'fa-windows', 'Windows') }}
			{{ download.osbutton('mac', 'fa-apple', 'macOS') }}
		</div>
	</div>
</div>

{{ _self.ospage(
	'linux',
	'Install LMMS on Linux'|trans,
	'Click one of the buttons below to download LMMS for Linux.'|trans,
	id,
	linartifacts,
	'<strong>Linux: </strong>' ~ 'Run the following command to set the <code>.AppImage</code> executable before running:'|trans ~
	'<br><br><pre class="code-block">chmod +x ~/Downloads/lmms-*.AppImage</pre>',
) }}

{{ _self.ospage(
	'windows',
	'Install LMMS on Windows'|trans,
	'Click one of the buttons below to download LMMS for Windows'|trans,
	id,
	winartifacts
) }}

{{ _self.ospage(
	'mac',
	'Install LMMS on macOS'|trans,
	'Click one of the buttons below to download LMMS for macOS'|trans,
	id,
	osxartifacts,
	'<strong>macOS: </strong>' ~ 'Run the following command to mark the application as safe before running:'|trans ~
	'<br><br><pre class="code-block">sudo xattr -d -r com.apple.quarantine /Applications/LMMS.app</pre>',
) }}

<script>
function showOS(os) {
	location.hash = os;
	if (os.indexOf("linux") != -1) {
		if (os == "#linux") {
			// Default linux distro shown is Debian
			os = "#linux-debian";
		}
		$(os+"-button").tab("show");
		os = "#linux";
	}

	hide('#windows-div');
	hide('#linux-div');
	hide('#mac-div');
	show(os+'-div');

	$(os+"-button").parent().addClass("active") ;
}

// Add Linux-specific tab functionality
function showLinux() {
	// Make the current hash visible
	if (location.hash != '#linux') {
		$('#linux-tabs a[href="' + location.hash + '"]').tab('show');
	} else {
		$('#linux-tabs a[href="#linux-debian"]').tab('show');
	}

	$('#linux-tabs a').click(function (e) {
		e.preventDefault();
		$(this).tab('show');
	})
}

function hide(obj) {
	$(obj).hide();
	$(obj).removeClass('show');
}

function show(obj) {
	$(obj).show();
	$(obj).removeClass('hidden');
	$(obj).removeClass('hide');
}

function autoSelect() {
	if (navigator.appVersion.indexOf("Mac")!=-1)
		showOS("#mac");
	else if (navigator.appVersion.indexOf("X11")!=-1)
		showOS("#linux");
	else if (navigator.appVersion.indexOf("Linux")!=-1)
		showOS("#linux");
	else showOS("#windows");
}

$(function() {
	if (location.hash) {
		try {
			showOS(location.hash);
		} catch (err) {
			autoSelect();
		}
	} else {
		autoSelect();
	}
});

$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
	$(e.target).parent().children().removeClass("active");
	e.target.classList.add("active");
})

</script>

{% endblock %}

{% block foot %}
{% endblock %}
