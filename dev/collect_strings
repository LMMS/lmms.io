#!/bin/bash
function join() {
  local IFS="$1"; shift; echo "$*";
}

function extract_cache() {
  pushd "/tmp/cache/twig/lmms.io/"
  cache_files=()
  for i in */*.php; do cache_files+=("$(readlink -f "${i}")"); done
  popd
  xgettext -L php --from-code=utf-8 -o /tmp/lmms.io.pot "${cache_files[@]}"
}

function convert_filenames() {
  tempfile="$(mktemp --suffix ".php")"
  cat << 'EOF' | sed "s|__FILE__|${1}|g; s|__DIR__|\"${root_dir}\"|g" > "${tempfile}"
<?php
require_once(__DIR__ . '/../vendor/autoload.php');
$targetFile = '__FILE__';
$classNamePat = '/class (\w+) extends Twig_Template/';
$fileContent = file_get_contents($targetFile);
if ($fileContent === FALSE) {
  die();
}
preg_match($classNamePat, $fileContent, $className);
$loader = new Twig_Loader_Filesystem(__DIR__ . '/../templates');
$twig = new Twig_Environment($loader, array(
    'auto_reload' => false
));
$v0=null;
require_once($targetFile);
eval('$v0=new ' . $className[1] . '($twig);');
foreach ($v0->getDebugInfo() as $oldLn => $newLn) {
  echo 's|' . $targetFile . ':' . $oldLn . '|' . $v0->getTemplateName() . ':' . $newLn . '|g' . PHP_EOL;
}
?>
EOF

  php "${tempfile}" | sed -i "/tmp/lmms.io.pot" -f -
  rm -f "${tempfile}" || true
}

function gen_cache() {
  tempfile="$(mktemp -p "${root_dir}" --suffix ".php")"
  cat << 'EOF' | sed "s|__FILES__|${1}|g" > "${tempfile}"
<?php
require_once('app.php');
use Symfony\Component\HttpFoundation\Response;
$tmpdir = '/tmp/cache/twig/lmms.io/';
$tplDir = '../templates/';
$app['twig']->setCache($tmpdir);
echo 'Initiating a dry-run...<br>';
echo 'Temp files are stored in ' . $tmpdir . '<br>';
require_once('../views.php');
$files = array(__FILES__);
foreach ($files as $file)
{
        echo 'Loading ' . $file . '...<br>';
        try {
          $app['twig']->loadTemplate($file);
        } catch (Exception $e) {
          echo '<br>ERROR:<br>' . $e->getMessage();
          break;
        }
}
die();
?>
EOF

  echo "${tempfile}"
}

echo "Cleaning up previous cache..."
rm -rf "/tmp/cache/twig/lmms.io/"
tpls="$(realpath "$(dirname "$0")"/../templates)"
root_dir="$(realpath "$(dirname "$0")"/../public)"
pushd "${tpls}"
twig_files=()
for i in *.twig; do twig_files+=(\'"${i}"\'); done
for i in */*.twig; do twig_files+=(\'"${i}"\'); done
twig_files_string="$(join "," "${twig_files[@]}")"
caching_script="$(gen_cache "${twig_files_string}")"
php -S localhost:8000 -t "${root_dir}" &
php_pid=$!
sleep 3
curl --progress-bar "http://localhost:8000/$(basename "${caching_script}")" | sed 's|<br>|\n|g'
sleep 1
kill -TERM $php_pid
rm "${caching_script}"
extract_cache
pushd "/tmp/cache/twig/lmms.io/"
for i in */*.php; do convert_filenames "$(readlink -f "${i}")"; done
popd
popd
mv "/tmp/lmms.io.pot" "$1"
